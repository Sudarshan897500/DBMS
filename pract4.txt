-- Create tables with constraints
CREATE TABLE Account (
    Acc_no INT PRIMARY KEY,
    branch_name VARCHAR(255),
    balance DECIMAL(10, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Branch (
    branch_name VARCHAR(255) PRIMARY KEY,
    branch_city VARCHAR(255),
    assets DECIMAL(15, 2)
);

CREATE TABLE Customer (
    cust_name VARCHAR(255) PRIMARY KEY,
    cust_street VARCHAR(255),
    cust_city VARCHAR(255)
);

CREATE TABLE Depositor (
    cust_name VARCHAR(255),
    acc_no INT,
    PRIMARY KEY (cust_name, acc_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (acc_no) REFERENCES Account(Acc_no)
);

CREATE TABLE Loan (
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(255),
    amount DECIMAL(10, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Borrower (
    cust_name VARCHAR(255),
    loan_no INT,
    PRIMARY KEY (cust_name, loan_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);
 
SELECT branch_name, AVG(balance) AS average_balance
FROM Account
GROUP BY branch_name;

SELECT D.branch_name, COUNT(DISTINCT D.cust_name) AS depositor_count
FROM Depositor D
JOIN Account A ON D.acc_no = A.Acc_no
GROUP BY D.branch_name;

SELECT branch_name
FROM Account
GROUP BY branch_name
HAVING AVG(balance) > 12000;

SELECT COUNT(*) AS customer_count
FROM Customer;

SELECT SUM(amount) AS total_loan_amount
FROM Loan;

DELETE FROM Loan
WHERE amount BETWEEN 1300 AND 1500;

DELETE FROM Account
WHERE branch_name IN (SELECT branch_name FROM Branch WHERE branch_city = 'Nigdi');

DELETE FROM Branch
WHERE branch_city = 'Nigdi';
